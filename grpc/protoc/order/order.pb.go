// Code generated by protoc-gen-go. DO NOT EDIT.
// source: order/order.proto

/*
Package order is a generated protocol buffer package.

It is generated from these files:
	order/order.proto

It has these top-level messages:
	Order
	OrderReq
	OrderRslt
*/
package order

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import common "go_test/grpc/protoc/common"
import ordervo "go_test/grpc/protoc/data/ordervo"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type PointType int32

const (
	PointType_None      PointType = 0
	PointType_FroadBean PointType = 1
	PointType_BankBean  PointType = 2
)

var PointType_name = map[int32]string{
	0: "None",
	1: "FroadBean",
	2: "BankBean",
}
var PointType_value = map[string]int32{
	"None":      0,
	"FroadBean": 1,
	"BankBean":  2,
}

func (x PointType) String() string {
	return proto.EnumName(PointType_name, int32(x))
}
func (PointType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type Order struct {
	Order            *ordervo.OrderVo             `protobuf:"bytes,1,opt,name=order" json:"order,omitempty"`
	Suborders        []*ordervo.SuborderVo        `protobuf:"bytes,2,rep,name=suborders" json:"suborders,omitempty"`
	SuborderProducts []*ordervo.SuborderProductVo `protobuf:"bytes,3,rep,name=suborderProducts" json:"suborderProducts,omitempty"`
}

func (m *Order) Reset()                    { *m = Order{} }
func (m *Order) String() string            { return proto.CompactTextString(m) }
func (*Order) ProtoMessage()               {}
func (*Order) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Order) GetOrder() *ordervo.OrderVo {
	if m != nil {
		return m.Order
	}
	return nil
}

func (m *Order) GetSuborders() []*ordervo.SuborderVo {
	if m != nil {
		return m.Suborders
	}
	return nil
}

func (m *Order) GetSuborderProducts() []*ordervo.SuborderProductVo {
	if m != nil {
		return m.SuborderProducts
	}
	return nil
}

type OrderReq struct {
	OrderID    string `protobuf:"bytes,1,opt,name=orderID" json:"orderID,omitempty"`
	ClientID   string `protobuf:"bytes,2,opt,name=clientID" json:"clientID,omitempty"`
	MemberCode int64  `protobuf:"varint,3,opt,name=memberCode" json:"memberCode,omitempty"`
}

func (m *OrderReq) Reset()                    { *m = OrderReq{} }
func (m *OrderReq) String() string            { return proto.CompactTextString(m) }
func (*OrderReq) ProtoMessage()               {}
func (*OrderReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *OrderReq) GetOrderID() string {
	if m != nil {
		return m.OrderID
	}
	return ""
}

func (m *OrderReq) GetClientID() string {
	if m != nil {
		return m.ClientID
	}
	return ""
}

func (m *OrderReq) GetMemberCode() int64 {
	if m != nil {
		return m.MemberCode
	}
	return 0
}

type OrderRslt struct {
	// *
	// 订单服务返回结果
	Rslt *common.Rslt `protobuf:"bytes,1,opt,name=rslt" json:"rslt,omitempty"`
	// *
	// 订单服务返回结果
	Orders []*Order `protobuf:"bytes,2,rep,name=orders" json:"orders,omitempty"`
}

func (m *OrderRslt) Reset()                    { *m = OrderRslt{} }
func (m *OrderRslt) String() string            { return proto.CompactTextString(m) }
func (*OrderRslt) ProtoMessage()               {}
func (*OrderRslt) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *OrderRslt) GetRslt() *common.Rslt {
	if m != nil {
		return m.Rslt
	}
	return nil
}

func (m *OrderRslt) GetOrders() []*Order {
	if m != nil {
		return m.Orders
	}
	return nil
}

func init() {
	proto.RegisterType((*Order)(nil), "order.Order")
	proto.RegisterType((*OrderReq)(nil), "order.OrderReq")
	proto.RegisterType((*OrderRslt)(nil), "order.OrderRslt")
	proto.RegisterEnum("order.PointType", PointType_name, PointType_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for OrderService service

type OrderServiceClient interface {
	GetOrderDetail(ctx context.Context, in *OrderReq, opts ...grpc.CallOption) (*OrderRslt, error)
}

type orderServiceClient struct {
	cc *grpc.ClientConn
}

func NewOrderServiceClient(cc *grpc.ClientConn) OrderServiceClient {
	return &orderServiceClient{cc}
}

func (c *orderServiceClient) GetOrderDetail(ctx context.Context, in *OrderReq, opts ...grpc.CallOption) (*OrderRslt, error) {
	out := new(OrderRslt)
	err := grpc.Invoke(ctx, "/order.OrderService/getOrderDetail", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for OrderService service

type OrderServiceServer interface {
	GetOrderDetail(context.Context, *OrderReq) (*OrderRslt, error)
}

func RegisterOrderServiceServer(s *grpc.Server, srv OrderServiceServer) {
	s.RegisterService(&_OrderService_serviceDesc, srv)
}

func _OrderService_GetOrderDetail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OrderReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrderServiceServer).GetOrderDetail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/order.OrderService/GetOrderDetail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrderServiceServer).GetOrderDetail(ctx, req.(*OrderReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _OrderService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "order.OrderService",
	HandlerType: (*OrderServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "getOrderDetail",
			Handler:    _OrderService_GetOrderDetail_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "order/order.proto",
}

func init() { proto.RegisterFile("order/order.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 337 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x91, 0xc1, 0x6e, 0xb2, 0x40,
	0x14, 0x85, 0x45, 0xd4, 0x1f, 0xae, 0xfc, 0x2d, 0x1d, 0x37, 0x84, 0x45, 0x43, 0x48, 0xd3, 0x98,
	0x2e, 0x34, 0xa5, 0xe9, 0x0b, 0x58, 0x6b, 0xe2, 0xa6, 0x35, 0x63, 0xe3, 0xba, 0x08, 0x93, 0x86,
	0x14, 0xb8, 0x3a, 0x8c, 0x26, 0x7d, 0xa5, 0x3e, 0x65, 0xe3, 0x1d, 0xb0, 0x35, 0x6e, 0x18, 0xce,
	0xf9, 0xce, 0x9d, 0x19, 0x0e, 0x70, 0x85, 0x32, 0x15, 0x72, 0x4c, 0xcf, 0xd1, 0x46, 0xa2, 0x42,
	0xd6, 0x25, 0xe1, 0x0f, 0x12, 0x2c, 0x0a, 0x2c, 0xc7, 0x7a, 0xd1, 0xcc, 0xf7, 0xd3, 0x58, 0xc5,
	0x3a, 0xbd, 0xc7, 0x66, 0xd5, 0x2c, 0xfc, 0x36, 0xa0, 0xfb, 0x7a, 0x70, 0xd8, 0x2d, 0xe8, 0x3d,
	0x3c, 0x23, 0x30, 0x86, 0xfd, 0xc8, 0x1d, 0x35, 0x41, 0xc2, 0x2b, 0xe4, 0x1a, 0xb3, 0x7b, 0xb0,
	0xab, 0xdd, 0x9a, 0xde, 0x2b, 0xaf, 0x1d, 0x98, 0xc3, 0x7e, 0x34, 0x38, 0x66, 0x97, 0x35, 0x59,
	0x21, 0xff, 0x4d, 0xb1, 0x19, 0xb8, 0x8d, 0x58, 0x48, 0x4c, 0x77, 0x89, 0xaa, 0x3c, 0x93, 0x26,
	0xfd, 0xb3, 0xc9, 0x3a, 0xb0, 0x42, 0x7e, 0x36, 0x13, 0xbe, 0x83, 0x45, 0x97, 0xe1, 0x62, 0xcb,
	0x3c, 0xf8, 0x47, 0x70, 0x3e, 0xa5, 0x0b, 0xdb, 0xbc, 0x91, 0xcc, 0x07, 0x2b, 0xc9, 0x33, 0x51,
	0xaa, 0xf9, 0xd4, 0x6b, 0x13, 0x3a, 0x6a, 0x76, 0x0d, 0x50, 0x88, 0x62, 0x2d, 0xe4, 0x13, 0xa6,
	0xc2, 0x33, 0x03, 0x63, 0x68, 0xf2, 0x3f, 0x4e, 0xb8, 0x04, 0x5b, 0x9f, 0x50, 0xe5, 0x8a, 0x05,
	0xd0, 0x91, 0x55, 0xae, 0xea, 0x42, 0x9c, 0x51, 0x5d, 0xea, 0x81, 0x71, 0x22, 0xec, 0x06, 0x7a,
	0x27, 0x45, 0x38, 0xfa, 0x73, 0x74, 0x65, 0xbc, 0x66, 0x77, 0x11, 0xd8, 0x0b, 0xcc, 0x4a, 0xf5,
	0xf6, 0xb5, 0x11, 0xcc, 0x82, 0xce, 0x0b, 0x96, 0xc2, 0x6d, 0xb1, 0xff, 0x60, 0xcf, 0x24, 0xc6,
	0xe9, 0x44, 0xc4, 0xa5, 0x6b, 0x30, 0x07, 0xac, 0x49, 0x5c, 0x7e, 0x92, 0x6a, 0x47, 0xcf, 0xe0,
	0xd0, 0x26, 0x4b, 0x21, 0xf7, 0x59, 0x22, 0xd8, 0x23, 0x5c, 0x7c, 0x08, 0x45, 0xd6, 0x54, 0xa8,
	0x38, 0xcb, 0xd9, 0xe5, 0xc9, 0x59, 0x62, 0xeb, 0xbb, 0x27, 0x46, 0x95, 0xab, 0xb0, 0xb5, 0xee,
	0xd1, 0x5f, 0x7e, 0xf8, 0x09, 0x00, 0x00, 0xff, 0xff, 0x1e, 0x17, 0xd1, 0xb8, 0x32, 0x02, 0x00,
	0x00,
}
